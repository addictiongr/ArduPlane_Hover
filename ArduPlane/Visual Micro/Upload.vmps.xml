<VisualMicro>
  <Program Name="ArduPlane" Ext=".pde" Location="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\ArduPlane">
    <Debug RemotePortTransport="FastSerial" DebugMode="Full" DebugEnabled="1" LocalPort="COM11" LocalPortSpeed="115200" RemotePortSpeed="115200" RemotePort="Serial1" />
    <Compile CompilerErrors="0" ConfigurationName="Debug" StopOnError="True" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560" SketchName="ArduPlane" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 80;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_FASTSERIAL;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="Arduino">
      <Board Name="mega2560" Description="Arduino Mega 2560 or Mega ADK" CoreFolder="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\cores\arduino" VariantFullPath="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\variants\mega" McuIdePath="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows" McuSketchBookPath="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover" name="Arduino Mega 2560 or Mega ADK" upload.protocol="wiring" upload.maximum_size="258048" upload.speed="115200" bootloader.low_fuses="0xFF" bootloader.high_fuses="0xD8" bootloader.extended_fuses="0xFD" bootloader.path="stk500v2" bootloader.file="stk500boot_v2_mega2560.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" build.mcu="atmega2560" build.f_cpu="16000000L" build.core="arduino" build.variant="mega" runtime.ide.path="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows" build.system.path="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\system" software="ARDUINO" runtime.ide.version="101" build.core.vmresolved="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\cores\arduino" build.core.parentfolder.vmresolved="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\cores" build.core.coresparentfolder.vmresolved="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino" vm.boardsource.name="boards.txt" vm.platformname.name="" build.variant.vmresolved="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\variants\mega" compiler.path="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\tools\avr\bin\" includes=" -I&quot;C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\cores\arduino&quot;  -I&quot;C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\variants\mega&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\FastSerial&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Common&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Menu&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\Arduino_Mega_ISR_Registry&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\APM_RC&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_GPS&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\I2C&quot;  -I&quot;C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\libraries\SPI&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Semaphore&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\DataFlash&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_ADC&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_AnalogSource&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_PeriodicProcess&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Baro&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Compass&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Math&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_InertialSensor&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_IMU&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_AHRS&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\PID&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\RC_Channel&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_RangeFinder&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\Filter&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Relay&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Camera&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Airspeed&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\memcheck&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\APM_Control&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\GCS_MAVLink&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Mount&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\AP_Declination&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\APM_OBC&quot;  -I&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\SITL&quot; " build.path="C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560" build.project_name="ArduPlane" build.variant.path="C:\Users\Brian\Documents\ArduPilot-Arduino-1.0.3-windows\hardware\arduino\variants\mega" archive_file="core.a" object_file="&quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\SITL\SITL.cpp.o&quot;" source_file="&quot;C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\libraries\SITL\SITL.cpp&quot;" object_files="&quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\ArduPlane.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\FastSerial\ftoa_engine.S.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\FastSerial\ultoa_invert.S.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\FastSerial\BetterStream.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\FastSerial\FastSerial.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\FastSerial\vprintf.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Common\AP_Common.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Common\AP_Loop.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Common\AP_MetaClass.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Common\AP_Param.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Common\AP_Var_menufuncs.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Common\c++.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Menu\AP_Menu.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\Arduino_Mega_ISR_Registry\Arduino_Mega_ISR_Registry.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\APM_RC\APM_RC_APM1.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\APM_RC\APM_RC_APM2.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_406.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_Auto.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_HIL.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_IMU.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_MTK.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_MTK16.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_NMEA.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_SIRF.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\AP_GPS_UBLOX.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_GPS\GPS.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\I2C\I2C.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\SPI\SPI.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Semaphore\AP_Semaphore.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\DataFlash\DataFlash.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\DataFlash\DataFlash_APM1.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\DataFlash\DataFlash_APM2.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_ADC\AP_ADC.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_ADC\AP_ADC_ADS7844.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_ADC\AP_ADC_HIL.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AnalogSource\AP_AnalogSource_ADC.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AnalogSource\AP_AnalogSource_Arduino.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_PeriodicProcess\AP_PeriodicProcessStub.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_PeriodicProcess\AP_TimerProcess.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Baro\AP_Baro.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Baro\AP_Baro_BMP085.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Baro\AP_Baro_BMP085_hil.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Baro\AP_Baro_MS5611.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Compass\AP_Compass_HIL.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Compass\AP_Compass_HMC5843.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Compass\Compass.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Math\AP_Math.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Math\location.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Math\matrix3.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Math\polygon.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Math\quaternion.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Math\vector3.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_InertialSensor\AP_InertialSensor_MPU6000.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_InertialSensor\AP_InertialSensor_Oilpan.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_InertialSensor\AP_InertialSensor_Stub.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_IMU\AP_IMU_INS.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_IMU\AP_IMU_Shim.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_IMU\IMU.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AHRS\AP_AHRS.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AHRS\AP_AHRS_DCM.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AHRS\AP_AHRS_HIL.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AHRS\AP_AHRS_MPU6000.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_AHRS\Quaternion.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\PID\PID.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\RC_Channel\RC_Channel.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\RC_Channel\RC_Channel_aux.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_RangeFinder\AP_RangeFinder_MaxsonarXL.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_RangeFinder\AP_RangeFinder_SharpGP2Y.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_RangeFinder\RangeFinder.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\Filter\DerivativeFilter.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Relay\AP_Relay.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Camera\AP_Camera.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Airspeed\AP_Airspeed.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\memcheck\memcheck.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\APM_Control\AP_PitchController.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\APM_Control\AP_RollController.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\APM_Control\AP_YawController.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\GCS_MAVLink\GCS_MAVLink.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Mount\AP_Mount.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\AP_Declination\AP_Declination.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\APM_OBC\APM_OBC.cpp.o&quot; &quot;C:\Users\Brian\AppData\Local\VMicro\Arduino\Builds\ArduPlane\mega2560\SITL\SITL.cpp.o&quot; " />
    </Platform>
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="ArduPlane.pde, line 784" Id="d12d082d-520d-4694-a761-7b80822daaeb" Enabled="1" Message="q1: {qcurrent.q1}, q2: {qcurrent.q2}, q3: {qcurrent.q3}, q4: {qcurrent.q4}" MessageTextType="0" PreProcessedMessage="q1: {0}, q2: {1}, q3: {2}, q4: {3}" Condition="" ConditionType="1" CurrentHits="0" File="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\ArduPlane\ArduPlane.pde" FileLine="784" FileColumn="1" FunctionName="fast_loop()" FunctionLineOffset="27" FunctionColumnOffset="1" HitCountTarget="50" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='d12d082d-520d-4694-a761-7b80822daaeb'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>777	    // update hil before AHRS update
778	    gcs_update();
779	#endif
780	
781	    ahrs.update();
782	///////////// Quaternion stuff I added ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
783		// Convert current euler angles to quaternion
--&gt;784		qcurrent.from_euler(ahrs.roll, ahrs.pitch, ahrs.yaw);
785		/*/ Calculate Quaternion error
786		qerr = qcurrent.qerror(qcommand);
787		// Convert quaternion error back to euler angles (rad)
788		qerr.to_euler(_roll_error, _pitch_error, _yaw_error);
789		// Convert from rad to deg
790		roll_error_deg = roll_error*(180/PI); pitch_error_deg = pitch_error*(180/PI); yaw_error_deg = yaw_error*(180/PI);
791		// Convert from deg to centidegrees
792		roll_error_centdeg = int32_t (roll_error_deg*100); pitch_error_centdeg = int32_t (pitch_error_deg*100); yaw_error_centdeg = int32_t (yaw_error_deg*100);
793	*//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
</Source>
        <MessageVariables>
          <MessageVariable Name="qcurrent.q1" Index="1" />
          <MessageVariable Name="qcurrent.q2" Index="2" />
          <MessageVariable Name="qcurrent.q3" Index="3" />
          <MessageVariable Name="qcurrent.q4" Index="4" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="ArduPlane.pde, line 816" Id="4dc5b751-fad3-4e5b-81b0-d2cc5833084d" Enabled="1" Message="Mode: {control_mode}" MessageTextType="0" PreProcessedMessage="Mode: {0}" Condition="" ConditionType="1" CurrentHits="0" File="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\ArduPlane\ArduPlane.pde" FileLine="816" FileColumn="1" FunctionName="fast_loop()" FunctionLineOffset="59" FunctionColumnOffset="1" HitCountTarget="50" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='4dc5b751-fad3-4e5b-81b0-d2cc5833084d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>809	#if INERTIAL_NAVIGATION == ENABLED
810	    // TODO: implement inertial nav function
811	    inertialNavigation();
812	#endif
813	
814	    // custom code/exceptions for flight modes
815	    // ---------------------------------------
--&gt;816	    update_current_flight_mode();
817	
818	    // apply desired roll, pitch and yaw to the plane
819	    // ----------------------------------------------
820	    if (control_mode &gt; MANUAL)
821	        stabilize();
822	
823	    // write out the servo PWM values
824	    // ------------------------------
825	    set_servos();
</Source>
        <MessageVariables>
          <MessageVariable Name="control_mode" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="Attitude.pde, line 86" Id="31535a3d-43e4-4175-9181-7b110ccecf09" Enabled="1" Message="Roll PID Input: {roll_PID_input}" MessageTextType="0" PreProcessedMessage="Roll PID Input: {0}" Condition="" ConditionType="1" CurrentHits="0" File="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\ArduPlane\Attitude.pde" FileLine="86" FileColumn="1" FunctionName="stabilize()" FunctionLineOffset="29" FunctionColumnOffset="1" HitCountTarget="50" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='31535a3d-43e4-4175-9181-7b110ccecf09'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>79		
80		// Use quaternions for hover mode /////////////////////////////////////////////////////////
81		if (control_mode == HOVER_PID) {
82			roll_PID_input = roll_error_centdeg;
83		}	else {
84			roll_PID_input = (nav_roll_cd - ahrs.roll_sensor);
85		}
--&gt;86		g.channel_roll.servo_out = g.pidServoRoll.get_pid(roll_PID_input, speed_scaler);
87		// Calculate dersired servo output for the roll
88		// ---------------------------------------------
89		//g.channel_roll.servo_out = g.pidServoRoll.get_pid((nav_roll_cd - ahrs.roll_sensor), speed_scaler);
90	
91		// Use quaternions for hover mode /////////////////////////////////////////////////////////
92		if (control_mode == HOVER_PID) {
93			pitch_PID_input = pitch_error_centdeg;
94		}	else {	
95			int32_t tempcalc = nav_pitch_cd +
</Source>
        <MessageVariables>
          <MessageVariable Name="roll_PID_input" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="Attitude.pde, line 82" Id="71b6c2b4-3224-4e2a-9c68-4231c88b8bb9" Enabled="1" Message="Using quaternions to stabilize" MessageTextType="0" PreProcessedMessage="Using quaternions to stabilize" Condition="" ConditionType="1" CurrentHits="0" File="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\ArduPlane\Attitude.pde" FileLine="82" FileColumn="1" FunctionName="stabilize()" FunctionLineOffset="25" FunctionColumnOffset="1" HitCountTarget="50" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='71b6c2b4-3224-4e2a-9c68-4231c88b8bb9'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>75	        if (ahrs.roll_sensor &lt; 0) nav_roll_cd -= 36000;
76	    }
77	
78	#if APM_CONTROL == DISABLED
79		
80		// Use quaternions for hover mode /////////////////////////////////////////////////////////
81		if (control_mode == HOVER_PID) {
--&gt;82			roll_PID_input = roll_error_centdeg;
83		}	else {
84			roll_PID_input = (nav_roll_cd - ahrs.roll_sensor);
85		}
86		g.channel_roll.servo_out = g.pidServoRoll.get_pid(roll_PID_input, speed_scaler);
87		// Calculate dersired servo output for the roll
88		// ---------------------------------------------
89		//g.channel_roll.servo_out = g.pidServoRoll.get_pid((nav_roll_cd - ahrs.roll_sensor), speed_scaler);
90	
91		// Use quaternions for hover mode /////////////////////////////////////////////////////////
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="Attitude.pde, line 105" Id="231e64fd-b9cc-4ecd-8795-aa27c75a5e02" Enabled="1" Message="Pitch Input: {pitch_PID_input}" MessageTextType="0" PreProcessedMessage="Pitch Input: {0}" Condition="" ConditionType="1" CurrentHits="0" File="C:\Users\Brian\Documents\My Dropbox\Thesis\ArduPlane_Hover\ArduPlane\Attitude.pde" FileLine="105" FileColumn="1" FunctionName="stabilize()" FunctionLineOffset="48" FunctionColumnOffset="1" HitCountTarget="50" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='231e64fd-b9cc-4ecd-8795-aa27c75a5e02'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>98					(ahrs.pitch_sensor - g.pitch_trim_cd);
99			if (inverted_flight) {
100				// when flying upside down the elevator control is inverted
101				tempcalc = -tempcalc;
102			}
103			pitch_PID_input = tempcalc;
104		}
--&gt;105		g.channel_pitch.servo_out = g.pidServoPitch.get_pid(pitch_PID_input, speed_scaler);
106	#else // APM_CONTROL == ENABLED
107	    // calculate roll and pitch control using new APM_Control library
108		g.channel_roll.servo_out = g.rollController.get_servo_out(nav_roll_cd, speed_scaler, control_mode == STABILIZE);
109		g.channel_pitch.servo_out = g.pitchController.get_servo_out(nav_pitch_cd, speed_scaler, control_mode == STABILIZE);    
110	#endif
111	
112	    // Mix Stick input to allow users to override control surfaces
113	    // -----------------------------------------------------------
114	    if (stick_mixing_enabled()) {
</Source>
        <MessageVariables>
          <MessageVariable Name="pitch_PID_input" Index="1" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>